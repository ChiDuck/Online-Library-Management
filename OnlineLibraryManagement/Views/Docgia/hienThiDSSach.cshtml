@model IEnumerable<OnlineLibraryManagement.Models.Sach>

@{
    ViewData["Title"] = "Tủ sách";
    Layout = "~/Views/Shared/_ReaderLayout.cshtml";
}
@{
    QuanLyThuVienContext db = new QuanLyThuVienContext();
    SelectList selectListTheLoai = new SelectList(db.Theloai.ToList(), "Maloai", "Tenloai");
    SelectList selectListNhaXuatBan = new SelectList(db.Nhaxuatban.ToList(), "Manxb", "Tennxb");
}
<h2 class="text-center mt-5 mb-3">- SÁCH -</h2>
<div class="d-inline-flex gap-3 mb-3 p-3 rounded-3 bg-light shadow-sm shadowhover">
    <div class="border-end">
        <form asp-action="timSach" method="post">
                <label class="control-label">Tìm kiếm</label>
                <input style="width:350px" type="text" name="giatricantim" placeholder="Tên sách, năm xuất bản hoặc tên tác giả" />
                <input type="submit" value="Tìm" class="btn btn-primary mx-3" />
        </form>
    </div>      
    <div>
        <form asp-action="locSach" method="post">
            <label>Thể loại</label>
            <select asp-items="@selectListTheLoai" name="theloai">
                <option value="">Tất cả</option>
            </select>
            <label style="margin-left:10px">Nhà xuất bản</label>
            <select asp-items="@selectListNhaXuatBan" name="nhaxuatban">
                <option value="">Tất cả</option>
            </select>
            <input type="submit" value="Lọc" class="btn btn-primary mx-3" />
        </form>
    </div>
</div>
<div>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
</div>
<div class="p-3 rounded-3 shadow bg-light">
<table class="table rounded-3 overflow-hidden table-hover">
        <thead class="align-middle text-light table-bordered" style="background-color:#627fd9">
        <tr>
			<th></th>
			<th>
                @Html.DisplayNameFor(model => model.Tensach)
            </th>
			<th>
				@Html.DisplayNameFor(model => model.Maloai)
			</th>
			<th>
				Tác giả
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Manxb)
			</th>
                <th class="text-center">
                @Html.DisplayNameFor(model => model.Soluong)
            </th>
                <th class="border-start"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            string idSach = "chon" + item.Masach;
            <tr>
				<td>
					@{
						if (!string.IsNullOrEmpty(item.Anhbia))
						{
							string tenFile = "~/img/" + item.Anhbia;
							<img height="150" width="100" src="@Url.Content(tenFile)" class="rounded"/>
						}
					}
				</td>
				<td>
                    <b>@Html.DisplayFor(modelItem => item.Tensach)</b><br />
                    Năm XB: @Html.DisplayFor(modelItem => item.Namxuatban)
                </td>
                <td>
                    @{
                        Theloai theloai = db.Theloai.Find(item.Maloai);
                        if (theloai != null)
                        {
                                    <p>@theloai.Tenloai</p>
                        }
                    }
                </td>
				<td>
					@{
						List<Phienbansach> dsPhienBanSach = db.Phienbansach.Where(x => x.Masach == item.Masach).ToList();
						for (int i = 0; i < dsPhienBanSach.Count; i++)
						{
							Phienbansach p = dsPhienBanSach[i];
							string tenTacgia = db.Tacgia.Find(p.Matacgia).Tentacgia;
							if (i == 0)
							{
								<text>@tenTacgia</text>
                                <br/>
							}
							else if (i >= 1 && i < dsPhienBanSach.Count)
							{
                                <text> @tenTacgia</text>
                                <br />
							}
						}
					}
				</td>
				<td>
                    @{
                        Nhaxuatban nxb = db.Nhaxuatban.Find(item.Manxb);
                        if (nxb != null)
                        {
                                    <p>@nxb.Tennxb</p>
                        }
                    }
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.Soluong)
                </td>
                    <td class="align-middle border-start text-center" style="width: 8em">
                    @{
                        if (item.Soluong > 0)
                        {
                            if (ViewBag.dsSach != null)
                            {
                                List<Sach> dsSach = ViewBag.dsSach;
                                if (dsSach.Find(x => x.Masach == item.Masach) != null)
                                {
                                    <input type="button" value="Đã chọn" class="btn btn-secondary" disabled/>
                                }
                                else
                                {
                                     <input type="button" value="Chọn" id="@idSach" class="btn btn-primary" onclick="chonSach('@item.Masach')" />
                                }
                            } 
                            else
                            {
                                <input type="button" value="Chọn" id="@idSach" class="btn btn-primary" onclick="chonSach('@item.Masach')" />
                            }
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
<script>
    function chonSach(id,sl) {
        console.log('@ViewBag.tinhTrang');
        if ('@ViewBag.tinhTrang' == 'True') {
            window.alert("Bạn có phiếu mượn sách đang chờ phê duyệt! Vui đợi phản hồi từ thủ thư trước khi lập phiếu mượn sách mới.");
            return;
        }

        if (@ViewBag.soSachMuon >= 7) {
            window.alert("Bạn chỉ được mượn tối đa 7 cuốn sách cho mỗi phiếu!");
            return;
        }

        var chon = document.getElementById("chon" + id);
            chon.classList = "btn btn-secondary";
        const xhttp = new XMLHttpRequest();

        xhttp.onload = function() {
            location.reload();
        }

        const url = "/Docgia/chonSach/" + id;
        xhttp.open("GET", url);
        xhttp.send();
    }
</script>
